// This file is generated from text files from GLEW.
// See copyright in src/lib/gl/gl.d (BSD/MIT like).
module lib.gl.core.gl10;

import lib.gl.types;


bool GL_VERSION_1_0;

const GL_FALSE = 0x0;
const GL_TRUE = 0x1;
const GL_BYTE = 0x1400;
const GL_UNSIGNED_BYTE = 0x1401;
const GL_SHORT = 0x1402;
const GL_UNSIGNED_SHORT = 0x1403;
const GL_INT = 0x1404;
const GL_UNSIGNED_INT = 0x1405;
const GL_FLOAT = 0x1406;
const GL_DOUBLE = 0x140A;
const GL_2_BYTES = 0x1407;
const GL_3_BYTES = 0x1408;
const GL_4_BYTES = 0x1409;
const GL_POINTS = 0x0000;
const GL_LINES = 0x0001;
const GL_LINE_LOOP = 0x0002;
const GL_LINE_STRIP = 0x0003;
const GL_TRIANGLES = 0x0004;
const GL_TRIANGLE_STRIP = 0x0005;
const GL_TRIANGLE_FAN = 0x0006;
const GL_QUADS = 0x0007;
const GL_QUAD_STRIP = 0x0008;
const GL_POLYGON = 0x0009;
const GL_VERTEX_ARRAY = 0x8074;
const GL_NORMAL_ARRAY = 0x8075;
const GL_COLOR_ARRAY = 0x8076;
const GL_INDEX_ARRAY = 0x8077;
const GL_TEXTURE_COORD_ARRAY = 0x8078;
const GL_EDGE_FLAG_ARRAY = 0x8079;
const GL_VERTEX_ARRAY_SIZE = 0x807A;
const GL_VERTEX_ARRAY_TYPE = 0x807B;
const GL_VERTEX_ARRAY_STRIDE = 0x807C;
const GL_NORMAL_ARRAY_TYPE = 0x807E;
const GL_NORMAL_ARRAY_STRIDE = 0x807F;
const GL_COLOR_ARRAY_SIZE = 0x8081;
const GL_COLOR_ARRAY_TYPE = 0x8082;
const GL_COLOR_ARRAY_STRIDE = 0x8083;
const GL_INDEX_ARRAY_TYPE = 0x8085;
const GL_INDEX_ARRAY_STRIDE = 0x8086;
const GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;
const GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;
const GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A;
const GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C;
const GL_VERTEX_ARRAY_POINTER = 0x808E;
const GL_NORMAL_ARRAY_POINTER = 0x808F;
const GL_COLOR_ARRAY_POINTER = 0x8090;
const GL_INDEX_ARRAY_POINTER = 0x8091;
const GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;
const GL_EDGE_FLAG_ARRAY_POINTER = 0x8093;
const GL_V2F = 0x2A20;
const GL_V3F = 0x2A21;
const GL_C4UB_V2F = 0x2A22;
const GL_C4UB_V3F = 0x2A23;
const GL_C3F_V3F = 0x2A24;
const GL_N3F_V3F = 0x2A25;
const GL_C4F_N3F_V3F = 0x2A26;
const GL_T2F_V3F = 0x2A27;
const GL_T4F_V4F = 0x2A28;
const GL_T2F_C4UB_V3F = 0x2A29;
const GL_T2F_C3F_V3F = 0x2A2A;
const GL_T2F_N3F_V3F = 0x2A2B;
const GL_T2F_C4F_N3F_V3F = 0x2A2C;
const GL_T4F_C4F_N3F_V4F = 0x2A2D;
const GL_MATRIX_MODE = 0x0BA0;
const GL_MODELVIEW = 0x1700;
const GL_PROJECTION = 0x1701;
const GL_TEXTURE = 0x1702;
const GL_POINT_SMOOTH = 0x0B10;
const GL_POINT_SIZE = 0x0B11;
const GL_POINT_SIZE_GRANULARITY = 0x0B13;
const GL_POINT_SIZE_RANGE = 0x0B12;
const GL_LINE_SMOOTH = 0x0B20;
const GL_LINE_STIPPLE = 0x0B24;
const GL_LINE_STIPPLE_PATTERN = 0x0B25;
const GL_LINE_STIPPLE_REPEAT = 0x0B26;
const GL_LINE_WIDTH = 0x0B21;
const GL_LINE_WIDTH_GRANULARITY = 0x0B23;
const GL_LINE_WIDTH_RANGE = 0x0B22;
const GL_POINT = 0x1B00;
const GL_LINE = 0x1B01;
const GL_FILL = 0x1B02;
const GL_CW = 0x0900;
const GL_CCW = 0x0901;
const GL_FRONT = 0x0404;
const GL_BACK = 0x0405;
const GL_POLYGON_MODE = 0x0B40;
const GL_POLYGON_SMOOTH = 0x0B41;
const GL_POLYGON_STIPPLE = 0x0B42;
const GL_EDGE_FLAG = 0x0B43;
const GL_CULL_FACE = 0x0B44;
const GL_CULL_FACE_MODE = 0x0B45;
const GL_FRONT_FACE = 0x0B46;
const GL_POLYGON_OFFSET_FACTOR = 0x8038;
const GL_POLYGON_OFFSET_UNITS = 0x2A00;
const GL_POLYGON_OFFSET_POINT = 0x2A01;
const GL_POLYGON_OFFSET_LINE = 0x2A02;
const GL_POLYGON_OFFSET_FILL = 0x8037;
const GL_COMPILE = 0x1300;
const GL_COMPILE_AND_EXECUTE = 0x1301;
const GL_LIST_BASE = 0x0B32;
const GL_LIST_INDEX = 0x0B33;
const GL_LIST_MODE = 0x0B30;
const GL_NEVER = 0x0200;
const GL_LESS = 0x0201;
const GL_EQUAL = 0x0202;
const GL_LEQUAL = 0x0203;
const GL_GREATER = 0x0204;
const GL_NOTEQUAL = 0x0205;
const GL_GEQUAL = 0x0206;
const GL_ALWAYS = 0x0207;
const GL_DEPTH_TEST = 0x0B71;
const GL_DEPTH_BITS = 0x0D56;
const GL_DEPTH_CLEAR_VALUE = 0x0B73;
const GL_DEPTH_FUNC = 0x0B74;
const GL_DEPTH_RANGE = 0x0B70;
const GL_DEPTH_WRITEMASK = 0x0B72;
const GL_DEPTH_COMPONENT = 0x1902;
const GL_LIGHTING = 0x0B50;
const GL_LIGHT0 = 0x4000;
const GL_LIGHT1 = 0x4001;
const GL_LIGHT2 = 0x4002;
const GL_LIGHT3 = 0x4003;
const GL_LIGHT4 = 0x4004;
const GL_LIGHT5 = 0x4005;
const GL_LIGHT6 = 0x4006;
const GL_LIGHT7 = 0x4007;
const GL_SPOT_EXPONENT = 0x1205;
const GL_SPOT_CUTOFF = 0x1206;
const GL_CONSTANT_ATTENUATION = 0x1207;
const GL_LINEAR_ATTENUATION = 0x1208;
const GL_QUADRATIC_ATTENUATION = 0x1209;
const GL_AMBIENT = 0x1200;
const GL_DIFFUSE = 0x1201;
const GL_SPECULAR = 0x1202;
const GL_SHININESS = 0x1601;
const GL_EMISSION = 0x1600;
const GL_POSITION = 0x1203;
const GL_SPOT_DIRECTION = 0x1204;
const GL_AMBIENT_AND_DIFFUSE = 0x1602;
const GL_COLOR_INDEXES = 0x1603;
const GL_LIGHT_MODEL_TWO_SIDE = 0x0B52;
const GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51;
const GL_LIGHT_MODEL_AMBIENT = 0x0B53;
const GL_FRONT_AND_BACK = 0x0408;
const GL_SHADE_MODEL = 0x0B54;
const GL_FLAT = 0x1D00;
const GL_SMOOTH = 0x1D01;
const GL_COLOR_MATERIAL = 0x0B57;
const GL_COLOR_MATERIAL_FACE = 0x0B55;
const GL_COLOR_MATERIAL_PARAMETER = 0x0B56;
const GL_NORMALIZE = 0x0BA1;
const GL_CLIP_PLANE0 = 0x3000;
const GL_CLIP_PLANE1 = 0x3001;
const GL_CLIP_PLANE2 = 0x3002;
const GL_CLIP_PLANE3 = 0x3003;
const GL_CLIP_PLANE4 = 0x3004;
const GL_CLIP_PLANE5 = 0x3005;
const GL_ACCUM_RED_BITS = 0x0D58;
const GL_ACCUM_GREEN_BITS = 0x0D59;
const GL_ACCUM_BLUE_BITS = 0x0D5A;
const GL_ACCUM_ALPHA_BITS = 0x0D5B;
const GL_ACCUM_CLEAR_VALUE = 0x0B80;
const GL_ACCUM = 0x0100;
const GL_ADD = 0x0104;
const GL_LOAD = 0x0101;
const GL_MULT = 0x0103;
const GL_RETURN = 0x0102;
const GL_ALPHA_TEST = 0x0BC0;
const GL_ALPHA_TEST_REF = 0x0BC2;
const GL_ALPHA_TEST_FUNC = 0x0BC1;
const GL_BLEND = 0x0BE2;
const GL_BLEND_SRC = 0x0BE1;
const GL_BLEND_DST = 0x0BE0;
const GL_ZERO = 0x0;
const GL_ONE = 0x1;
const GL_SRC_COLOR = 0x0300;
const GL_ONE_MINUS_SRC_COLOR = 0x0301;
const GL_SRC_ALPHA = 0x0302;
const GL_ONE_MINUS_SRC_ALPHA = 0x0303;
const GL_DST_ALPHA = 0x0304;
const GL_ONE_MINUS_DST_ALPHA = 0x0305;
const GL_DST_COLOR = 0x0306;
const GL_ONE_MINUS_DST_COLOR = 0x0307;
const GL_SRC_ALPHA_SATURATE = 0x0308;
const GL_CONSTANT_COLOR = 0x8001;
const GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
const GL_CONSTANT_ALPHA = 0x8003;
const GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
const GL_FEEDBACK = 0x1C01;
const GL_RENDER = 0x1C00;
const GL_SELECT = 0x1C02;
const GL_2D = 0x0600;
const GL_3D = 0x0601;
const GL_3D_COLOR = 0x0602;
const GL_3D_COLOR_TEXTURE = 0x0603;
const GL_4D_COLOR_TEXTURE = 0x0604;
const GL_POINT_TOKEN = 0x0701;
const GL_LINE_TOKEN = 0x0702;
const GL_LINE_RESET_TOKEN = 0x0707;
const GL_POLYGON_TOKEN = 0x0703;
const GL_BITMAP_TOKEN = 0x0704;
const GL_DRAW_PIXEL_TOKEN = 0x0705;
const GL_COPY_PIXEL_TOKEN = 0x0706;
const GL_PASS_THROUGH_TOKEN = 0x0700;
const GL_FEEDBACK_BUFFER_POINTER = 0x0DF0;
const GL_FEEDBACK_BUFFER_SIZE = 0x0DF1;
const GL_FEEDBACK_BUFFER_TYPE = 0x0DF2;
const GL_SELECTION_BUFFER_POINTER = 0x0DF3;
const GL_SELECTION_BUFFER_SIZE = 0x0DF4;
const GL_FOG = 0x0B60;
const GL_FOG_MODE = 0x0B65;
const GL_FOG_DENSITY = 0x0B62;
const GL_FOG_COLOR = 0x0B66;
const GL_FOG_INDEX = 0x0B61;
const GL_FOG_START = 0x0B63;
const GL_FOG_END = 0x0B64;
const GL_LINEAR = 0x2601;
const GL_EXP = 0x0800;
const GL_EXP2 = 0x0801;
const GL_LOGIC_OP = 0x0BF1;
const GL_INDEX_LOGIC_OP = 0x0BF1;
const GL_COLOR_LOGIC_OP = 0x0BF2;
const GL_LOGIC_OP_MODE = 0x0BF0;
const GL_CLEAR = 0x1500;
const GL_SET = 0x150F;
const GL_COPY = 0x1503;
const GL_COPY_INVERTED = 0x150C;
const GL_NOOP = 0x1505;
const GL_INVERT = 0x150A;
const GL_AND = 0x1501;
const GL_NAND = 0x150E;
const GL_OR = 0x1507;
const GL_NOR = 0x1508;
const GL_XOR = 0x1506;
const GL_EQUIV = 0x1509;
const GL_AND_REVERSE = 0x1502;
const GL_AND_INVERTED = 0x1504;
const GL_OR_REVERSE = 0x150B;
const GL_OR_INVERTED = 0x150D;
const GL_STENCIL_TEST = 0x0B90;
const GL_STENCIL_WRITEMASK = 0x0B98;
const GL_STENCIL_BITS = 0x0D57;
const GL_STENCIL_FUNC = 0x0B92;
const GL_STENCIL_VALUE_MASK = 0x0B93;
const GL_STENCIL_REF = 0x0B97;
const GL_STENCIL_FAIL = 0x0B94;
const GL_STENCIL_PASS_DEPTH_PASS = 0x0B96;
const GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95;
const GL_STENCIL_CLEAR_VALUE = 0x0B91;
const GL_STENCIL_INDEX = 0x1901;
const GL_KEEP = 0x1E00;
const GL_REPLACE = 0x1E01;
const GL_INCR = 0x1E02;
const GL_DECR = 0x1E03;
const GL_NONE = 0x0;
const GL_LEFT = 0x0406;
const GL_RIGHT = 0x0407;
const GL_FRONT_LEFT = 0x0400;
const GL_FRONT_RIGHT = 0x0401;
const GL_BACK_LEFT = 0x0402;
const GL_BACK_RIGHT = 0x0403;
const GL_AUX0 = 0x0409;
const GL_AUX1 = 0x040A;
const GL_AUX2 = 0x040B;
const GL_AUX3 = 0x040C;
const GL_COLOR_INDEX = 0x1900;
const GL_RED = 0x1903;
const GL_GREEN = 0x1904;
const GL_BLUE = 0x1905;
const GL_ALPHA = 0x1906;
const GL_LUMINANCE = 0x1909;
const GL_LUMINANCE_ALPHA = 0x190A;
const GL_ALPHA_BITS = 0x0D55;
const GL_RED_BITS = 0x0D52;
const GL_GREEN_BITS = 0x0D53;
const GL_BLUE_BITS = 0x0D54;
const GL_INDEX_BITS = 0x0D51;
const GL_SUBPIXEL_BITS = 0x0D50;
const GL_AUX_BUFFERS = 0x0C00;
const GL_READ_BUFFER = 0x0C02;
const GL_DRAW_BUFFER = 0x0C01;
const GL_DOUBLEBUFFER = 0x0C32;
const GL_STEREO = 0x0C33;
const GL_BITMAP = 0x1A00;
const GL_COLOR = 0x1800;
const GL_DEPTH = 0x1801;
const GL_STENCIL = 0x1802;
const GL_DITHER = 0x0BD0;
const GL_RGB = 0x1907;
const GL_RGBA = 0x1908;
const GL_MAX_LIST_NESTING = 0x0B31;
const GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35;
const GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36;
const GL_MAX_NAME_STACK_DEPTH = 0x0D37;
const GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38;
const GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39;
const GL_MAX_EVAL_ORDER = 0x0D30;
const GL_MAX_LIGHTS = 0x0D31;
const GL_MAX_CLIP_PLANES = 0x0D32;
const GL_MAX_TEXTURE_SIZE = 0x0D33;
const GL_MAX_PIXEL_MAP_TABLE = 0x0D34;
const GL_MAX_VIEWPORT_DIMS = 0x0D3A;
const GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B;
const GL_ATTRIB_STACK_DEPTH = 0x0BB0;
const GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1;
const GL_COLOR_CLEAR_VALUE = 0x0C22;
const GL_COLOR_WRITEMASK = 0x0C23;
const GL_CURRENT_INDEX = 0x0B01;
const GL_CURRENT_COLOR = 0x0B00;
const GL_CURRENT_NORMAL = 0x0B02;
const GL_CURRENT_RASTER_COLOR = 0x0B04;
const GL_CURRENT_RASTER_DISTANCE = 0x0B09;
const GL_CURRENT_RASTER_INDEX = 0x0B05;
const GL_CURRENT_RASTER_POSITION = 0x0B07;
const GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06;
const GL_CURRENT_RASTER_POSITION_VALID = 0x0B08;
const GL_CURRENT_TEXTURE_COORDS = 0x0B03;
const GL_INDEX_CLEAR_VALUE = 0x0C20;
const GL_INDEX_MODE = 0x0C30;
const GL_INDEX_WRITEMASK = 0x0C21;
const GL_MODELVIEW_MATRIX = 0x0BA6;
const GL_MODELVIEW_STACK_DEPTH = 0x0BA3;
const GL_NAME_STACK_DEPTH = 0x0D70;
const GL_PROJECTION_MATRIX = 0x0BA7;
const GL_PROJECTION_STACK_DEPTH = 0x0BA4;
const GL_RENDER_MODE = 0x0C40;
const GL_RGBA_MODE = 0x0C31;
const GL_TEXTURE_MATRIX = 0x0BA8;
const GL_TEXTURE_STACK_DEPTH = 0x0BA5;
const GL_VIEWPORT = 0x0BA2;
const GL_AUTO_NORMAL = 0x0D80;
const GL_MAP1_COLOR_4 = 0x0D90;
const GL_MAP1_GRID_DOMAIN = 0x0DD0;
const GL_MAP1_GRID_SEGMENTS = 0x0DD1;
const GL_MAP1_INDEX = 0x0D91;
const GL_MAP1_NORMAL = 0x0D92;
const GL_MAP1_TEXTURE_COORD_1 = 0x0D93;
const GL_MAP1_TEXTURE_COORD_2 = 0x0D94;
const GL_MAP1_TEXTURE_COORD_3 = 0x0D95;
const GL_MAP1_TEXTURE_COORD_4 = 0x0D96;
const GL_MAP1_VERTEX_3 = 0x0D97;
const GL_MAP1_VERTEX_4 = 0x0D98;
const GL_MAP2_COLOR_4 = 0x0DB0;
const GL_MAP2_GRID_DOMAIN = 0x0DD2;
const GL_MAP2_GRID_SEGMENTS = 0x0DD3;
const GL_MAP2_INDEX = 0x0DB1;
const GL_MAP2_NORMAL = 0x0DB2;
const GL_MAP2_TEXTURE_COORD_1 = 0x0DB3;
const GL_MAP2_TEXTURE_COORD_2 = 0x0DB4;
const GL_MAP2_TEXTURE_COORD_3 = 0x0DB5;
const GL_MAP2_TEXTURE_COORD_4 = 0x0DB6;
const GL_MAP2_VERTEX_3 = 0x0DB7;
const GL_MAP2_VERTEX_4 = 0x0DB8;
const GL_COEFF = 0x0A00;
const GL_DOMAIN = 0x0A02;
const GL_ORDER = 0x0A01;
const GL_FOG_HINT = 0x0C54;
const GL_LINE_SMOOTH_HINT = 0x0C52;
const GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50;
const GL_POINT_SMOOTH_HINT = 0x0C51;
const GL_POLYGON_SMOOTH_HINT = 0x0C53;
const GL_DONT_CARE = 0x1100;
const GL_FASTEST = 0x1101;
const GL_NICEST = 0x1102;
const GL_SCISSOR_TEST = 0x0C11;
const GL_SCISSOR_BOX = 0x0C10;
const GL_MAP_COLOR = 0x0D10;
const GL_MAP_STENCIL = 0x0D11;
const GL_INDEX_SHIFT = 0x0D12;
const GL_INDEX_OFFSET = 0x0D13;
const GL_RED_SCALE = 0x0D14;
const GL_RED_BIAS = 0x0D15;
const GL_GREEN_SCALE = 0x0D18;
const GL_GREEN_BIAS = 0x0D19;
const GL_BLUE_SCALE = 0x0D1A;
const GL_BLUE_BIAS = 0x0D1B;
const GL_ALPHA_SCALE = 0x0D1C;
const GL_ALPHA_BIAS = 0x0D1D;
const GL_DEPTH_SCALE = 0x0D1E;
const GL_DEPTH_BIAS = 0x0D1F;
const GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1;
const GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0;
const GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2;
const GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3;
const GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4;
const GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5;
const GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6;
const GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7;
const GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8;
const GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9;
const GL_PIXEL_MAP_S_TO_S = 0x0C71;
const GL_PIXEL_MAP_I_TO_I = 0x0C70;
const GL_PIXEL_MAP_I_TO_R = 0x0C72;
const GL_PIXEL_MAP_I_TO_G = 0x0C73;
const GL_PIXEL_MAP_I_TO_B = 0x0C74;
const GL_PIXEL_MAP_I_TO_A = 0x0C75;
const GL_PIXEL_MAP_R_TO_R = 0x0C76;
const GL_PIXEL_MAP_G_TO_G = 0x0C77;
const GL_PIXEL_MAP_B_TO_B = 0x0C78;
const GL_PIXEL_MAP_A_TO_A = 0x0C79;
const GL_PACK_ALIGNMENT = 0x0D05;
const GL_PACK_LSB_FIRST = 0x0D01;
const GL_PACK_ROW_LENGTH = 0x0D02;
const GL_PACK_SKIP_PIXELS = 0x0D04;
const GL_PACK_SKIP_ROWS = 0x0D03;
const GL_PACK_SWAP_BYTES = 0x0D00;
const GL_UNPACK_ALIGNMENT = 0x0CF5;
const GL_UNPACK_LSB_FIRST = 0x0CF1;
const GL_UNPACK_ROW_LENGTH = 0x0CF2;
const GL_UNPACK_SKIP_PIXELS = 0x0CF4;
const GL_UNPACK_SKIP_ROWS = 0x0CF3;
const GL_UNPACK_SWAP_BYTES = 0x0CF0;
const GL_ZOOM_X = 0x0D16;
const GL_ZOOM_Y = 0x0D17;
const GL_TEXTURE_ENV = 0x2300;
const GL_TEXTURE_ENV_MODE = 0x2200;
const GL_TEXTURE_1D = 0x0DE0;
const GL_TEXTURE_2D = 0x0DE1;
const GL_TEXTURE_WRAP_S = 0x2802;
const GL_TEXTURE_WRAP_T = 0x2803;
const GL_TEXTURE_MAG_FILTER = 0x2800;
const GL_TEXTURE_MIN_FILTER = 0x2801;
const GL_TEXTURE_ENV_COLOR = 0x2201;
const GL_TEXTURE_GEN_S = 0x0C60;
const GL_TEXTURE_GEN_T = 0x0C61;
const GL_TEXTURE_GEN_MODE = 0x2500;
const GL_TEXTURE_BORDER_COLOR = 0x1004;
const GL_TEXTURE_WIDTH = 0x1000;
const GL_TEXTURE_HEIGHT = 0x1001;
const GL_TEXTURE_BORDER = 0x1005;
const GL_TEXTURE_COMPONENTS = 0x1003;
const GL_TEXTURE_RED_SIZE = 0x805C;
const GL_TEXTURE_GREEN_SIZE = 0x805D;
const GL_TEXTURE_BLUE_SIZE = 0x805E;
const GL_TEXTURE_ALPHA_SIZE = 0x805F;
const GL_TEXTURE_LUMINANCE_SIZE = 0x8060;
const GL_TEXTURE_INTENSITY_SIZE = 0x8061;
const GL_NEAREST_MIPMAP_NEAREST = 0x2700;
const GL_NEAREST_MIPMAP_LINEAR = 0x2702;
const GL_LINEAR_MIPMAP_NEAREST = 0x2701;
const GL_LINEAR_MIPMAP_LINEAR = 0x2703;
const GL_OBJECT_LINEAR = 0x2401;
const GL_OBJECT_PLANE = 0x2501;
const GL_EYE_LINEAR = 0x2400;
const GL_EYE_PLANE = 0x2502;
const GL_SPHERE_MAP = 0x2402;
const GL_DECAL = 0x2101;
const GL_MODULATE = 0x2100;
const GL_NEAREST = 0x2600;
const GL_REPEAT = 0x2901;
const GL_CLAMP = 0x2900;
const GL_S = 0x2000;
const GL_T = 0x2001;
const GL_R = 0x2002;
const GL_Q = 0x2003;
const GL_TEXTURE_GEN_R = 0x0C62;
const GL_TEXTURE_GEN_Q = 0x0C63;
const GL_VENDOR = 0x1F00;
const GL_RENDERER = 0x1F01;
const GL_VERSION = 0x1F02;
const GL_EXTENSIONS = 0x1F03;
const GL_NO_ERROR = 0x0;
const GL_INVALID_VALUE = 0x0501;
const GL_INVALID_ENUM = 0x0500;
const GL_INVALID_OPERATION = 0x0502;
const GL_STACK_OVERFLOW = 0x0503;
const GL_STACK_UNDERFLOW = 0x0504;
const GL_OUT_OF_MEMORY = 0x0505;
const GL_CURRENT_BIT = 0x00000001;
const GL_POINT_BIT = 0x00000002;
const GL_LINE_BIT = 0x00000004;
const GL_POLYGON_BIT = 0x00000008;
const GL_POLYGON_STIPPLE_BIT = 0x00000010;
const GL_PIXEL_MODE_BIT = 0x00000020;
const GL_LIGHTING_BIT = 0x00000040;
const GL_FOG_BIT = 0x00000080;
const GL_DEPTH_BUFFER_BIT = 0x00000100;
const GL_ACCUM_BUFFER_BIT = 0x00000200;
const GL_STENCIL_BUFFER_BIT = 0x00000400;
const GL_VIEWPORT_BIT = 0x00000800;
const GL_TRANSFORM_BIT = 0x00001000;
const GL_ENABLE_BIT = 0x00002000;
const GL_COLOR_BUFFER_BIT = 0x00004000;
const GL_HINT_BIT = 0x00008000;
const GL_EVAL_BIT = 0x00010000;
const GL_LIST_BIT = 0x00020000;
const GL_TEXTURE_BIT = 0x00040000;
const GL_SCISSOR_BIT = 0x00080000;
const GL_ALL_ATTRIB_BITS = 0x000FFFFF;

extern(System):

void (*glClearIndex)(GLfloat c);
void (*glClearColor)(GLclampf,GLclampf,GLclampf,GLclampf);
void (*glClear)(GLbitfield);
void (*glIndexMask)(GLuint);
void (*glColorMask)(GLboolean,GLboolean,GLboolean,GLboolean);
void (*glAlphaFunc)(GLenum,GLclampf);
void (*glBlendFunc)(GLenum,GLenum);
void (*glLogicOp)(GLenum);
void (*glCullFace)(GLenum);
void (*glFrontFace)(GLenum);
void (*glPointSize)(GLfloat);
void (*glLineWidth)(GLfloat);
void (*glLineStipple)(GLint,GLushort);
void (*glPolygonMode)(GLenum,GLenum);
void (*glPolygonOffset)(GLfloat,GLfloat);
void (*glPolygonStipple)(GLubyte*);
void (*glGetPolygonStipple)(GLubyte*);
void (*glEdgeFlag)(GLboolean);
void (*glEdgeFlagv)(GLboolean*);
void (*glScissor)(GLint,GLint,GLsizei,GLsizei);
void (*glClipPlane)(GLenum,GLdouble*);
void (*glGetClipPlane)(GLenum,GLdouble*);
void (*glDrawBuffer)(GLenum);
void (*glReadBuffer)(GLenum);
void (*glEnable)(GLenum);
void (*glDisable)(GLenum);
GLboolean (*glIsEnabled)(GLenum);
void (*glEnableClientState)(GLenum);
void (*glDisableClientState)(GLenum);
void (*glGetBooleanv)(GLenum,GLboolean*);
void (*glGetDoublev)(GLenum,GLdouble*);
void (*glGetFloatv)(GLenum,GLfloat*);
void (*glGetIntegerv)(GLenum,GLint*);
void (*glPushAttrib)(GLbitfield);
void (*glPopAttrib)();
void (*glPushClientAttrib)(GLbitfield);
void (*glPopClientAttrib)();
GLint (*glRenderMode)(GLenum);
GLenum (*glGetError)();
GLchar* (*glGetString)(GLenum);
void (*glFinish)();
void (*glFlush)();
void (*glHint)(GLenum,GLenum);
void (*glClearDepth)(GLclampd);
void (*glDepthFunc)(GLenum);
void (*glDepthMask)(GLboolean);
void (*glDepthRange)(GLclampd,GLclampd);
void (*glClearAccum)(GLfloat,GLfloat,GLfloat,GLfloat);
void (*glAccum)(GLenum,GLfloat);
void (*glMatrixMode)(GLenum);
void (*glOrtho)(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble);
void (*glFrustum)(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble);
void (*glViewport)(GLint,GLint,GLsizei,GLsizei);
void (*glPushMatrix)();
void (*glPopMatrix)();
void (*glLoadIdentity)();
void (*glLoadMatrixd)(GLdouble*);
void (*glLoadMatrixf)(GLfloat*);
void (*glMultMatrixd)(GLdouble*);
void (*glMultMatrixf)(GLfloat*);
void (*glRotated)(GLdouble,GLdouble,GLdouble,GLdouble);
void (*glRotatef)(GLfloat,GLfloat,GLfloat,GLfloat);
void (*glScaled)(GLdouble,GLdouble,GLdouble);
void (*glScalef)(GLfloat,GLfloat,GLfloat);
void (*glTranslated)(GLdouble,GLdouble,GLdouble);
void (*glTranslatef)(GLfloat,GLfloat,GLfloat);
GLboolean (*glIsList)(GLuint);
void (*glDeleteLists)(GLuint,GLsizei);
GLuint (*glGenLists)(GLsizei);
void (*glNewList)(GLuint,GLenum);
void (*glEndList)();
void (*glCallList)(GLuint);
void (*glCallLists)(GLsizei,GLenum,GLvoid*);
void (*glListBase)(GLuint);
void (*glBegin)(GLenum);
void (*glEnd)();
void (*glVertex2d)(GLdouble,GLdouble);
void (*glVertex2f)(GLfloat,GLfloat);
void (*glVertex2i)(GLint,GLint);
void (*glVertex2s)(GLshort,GLshort);
void (*glVertex3d)(GLdouble,GLdouble,GLdouble);
void (*glVertex3f)(GLfloat,GLfloat,GLfloat);
void (*glVertex3i)(GLint,GLint,GLint);
void (*glVertex3s)(GLshort,GLshort,GLshort);
void (*glVertex4d)(GLdouble,GLdouble,GLdouble,GLdouble);
void (*glVertex4f)(GLfloat,GLfloat,GLfloat,GLfloat);
void (*glVertex4i)(GLint,GLint,GLint,GLint);
void (*glVertex4s)(GLshort,GLshort,GLshort,GLshort);
void (*glVertex2dv)(GLdouble*);
void (*glVertex2fv)(GLfloat*);
void (*glVertex2iv)(GLint*);
void (*glVertex2sv)(GLshort*);
void (*glVertex3dv)(GLdouble*);
void (*glVertex3fv)(GLfloat*);
void (*glVertex3iv)(GLint*);
void (*glVertex3sv)(GLshort*);
void (*glVertex4dv)(GLdouble*);
void (*glVertex4fv)(GLfloat*);
void (*glVertex4iv)(GLint*);
void (*glVertex4sv)(GLshort*);
void (*glNormal3b)(GLbyte,GLbyte,GLbyte);
void (*glNormal3d)(GLdouble,GLdouble,GLdouble);
void (*glNormal3f)(GLfloat,GLfloat,GLfloat);
void (*glNormal3i)(GLint,GLint,GLint);
void (*glNormal3s)(GLshort,GLshort,GLshort);
void (*glNormal3bv)(GLbyte*);
void (*glNormal3dv)(GLdouble*);
void (*glNormal3fv)(GLfloat*);
void (*glNormal3iv)(GLint*);
void (*glNormal3sv)(GLshort*);
void (*glIndexd)(GLdouble);
void (*glIndexf)(GLfloat);
void (*glIndexi)(GLint);
void (*glIndexs)(GLshort);
void (*glIndexub)(GLubyte);
void (*glIndexdv)(GLdouble*);
void (*glIndexfv)(GLfloat*);
void (*glIndexiv)(GLint*);
void (*glIndexsv)(GLshort*);
void (*glIndexubv)(GLubyte*);
void (*glColor3b)(GLbyte,GLbyte,GLbyte);
void (*glColor3d)(GLdouble,GLdouble,GLdouble);
void (*glColor3f)(GLfloat,GLfloat,GLfloat);
void (*glColor3i)(GLint,GLint,GLint);
void (*glColor3s)(GLshort,GLshort,GLshort);
void (*glColor3ub)(GLubyte,GLubyte,GLubyte);
void (*glColor3ui)(GLuint,GLuint,GLuint);
void (*glColor3us)(GLushort,GLushort,GLushort);
void (*glColor4b)(GLbyte,GLbyte,GLbyte,GLbyte);
void (*glColor4d)(GLdouble,GLdouble,GLdouble,GLdouble);
void (*glColor4f)(GLfloat,GLfloat,GLfloat,GLfloat);
void (*glColor4i)(GLint,GLint,GLint,GLint);
void (*glColor4s)(GLshort,GLshort,GLshort,GLshort);
void (*glColor4ub)(GLubyte,GLubyte,GLubyte,GLubyte);
void (*glColor4ui)(GLuint,GLuint,GLuint,GLuint);
void (*glColor4us)(GLushort,GLushort,GLushort,GLushort);
void (*glColor3bv)(GLubyte*);
void (*glColor3dv)(GLdouble*);
void (*glColor3fv)(GLfloat*);
void (*glColor3iv)(GLint*);
void (*glColor3sv)(GLshort*);
void (*glColor3ubv)(GLubyte*);
void (*glColor3uiv)(GLuint*);
void (*glColor3usv)(GLushort*);
void (*glColor4bv)(GLbyte*);
void (*glColor4dv)(GLdouble*);
void (*glColor4fv)(GLfloat*);
void (*glColor4iv)(GLint*);
void (*glColor4sv)(GLshort*);
void (*glColor4ubv)(GLubyte*);
void (*glColor4uiv)(GLuint*);
void (*glColor4usv)(GLushort);
void (*glTexCoord1d)(GLdouble);
void (*glTexCoord1f)(GLfloat);
void (*glTexCoord1i)(GLint);
void (*glTexCoord1s)(GLshort);
void (*glTexCoord2d)(GLdouble,GLdouble);
void (*glTexCoord2f)(GLfloat,GLfloat);
void (*glTexCoord2i)(GLint,GLint);
void (*glTexCoord2s)(GLshort,GLshort);
void (*glTexCoord3d)(GLdouble,GLdouble,GLdouble);
void (*glTexCoord3f)(GLfloat,GLfloat,GLfloat);
void (*glTexCoord3i)(GLint,GLint,GLint);
void (*glTexCoord3s)(GLshort,GLshort,GLshort);
void (*glTexCoord4d)(GLdouble,GLdouble,GLdouble,GLdouble);
void (*glTexCoord4f)(GLfloat,GLfloat,GLfloat,GLfloat);
void (*glTexCoord4i)(GLint,GLint,GLint,GLint);
void (*glTexCoord4s)(GLshort,GLshort,GLshort,GLshort);
void (*glTexCoord1dv)(GLdouble*);
void (*glTexCoord1fv)(GLfloat*);
void (*glTexCoord1iv)(GLint*);
void (*glTexCoord1sv)(GLshort*);
void (*glTexCoord2dv)(GLdouble*);
void (*glTexCoord2fv)(GLfloat*);
void (*glTexCoord2iv)(GLint*);
void (*glTexCoord2sv)(GLshort*);
void (*glTexCoord3dv)(GLdouble*);
void (*glTexCoord3fv)(GLfloat*);
void (*glTexCoord3iv)(GLint*);
void (*glTexCoord3sv)(GLshort*);
void (*glTexCoord4dv)(GLdouble*);
void (*glTexCoord4fv)(GLfloat*);
void (*glTexCoord4iv)(GLint*);
void (*glTexCoord4sv)(GLshort*);
void (*glRasterPos2d)(GLdouble,GLdouble);
void (*glRasterPos2f)(GLfloat,GLfloat);
void (*glRasterPos2i)(GLint,GLint);
void (*glRasterPos2s)(GLshort,GLshort);
void (*glRasterPos3d)(GLdouble,GLdouble,GLdouble);
void (*glRasterPos3f)(GLfloat,GLfloat,GLfloat);
void (*glRasterPos3i)(GLint,GLint,GLint);
void (*glRasterPos3s)(GLshort,GLshort,GLshort);
void (*glRasterPos4d)(GLdouble,GLdouble,GLdouble,GLdouble);
void (*glRasterPos4f)(GLfloat,GLfloat,GLfloat,GLfloat);
void (*glRasterPos4i)(GLint,GLint,GLint,GLint);
void (*glRasterPos4s)(GLshort,GLshort,GLshort,GLshort);
void (*glRasterPos2dv)(GLdouble*);
void (*glRasterPos2fv)(GLfloat*);
void (*glRasterPos2iv)(GLint*);
void (*glRasterPos2sv)(GLshort*);
void (*glRasterPos3dv)(GLdouble*);
void (*glRasterPos3fv)(GLfloat*);
void (*glRasterPos3iv)(GLint*);
void (*glRasterPos3sv)(GLshort*);
void (*glRasterPos4dv)(GLdouble*);
void (*glRasterPos4fv)(GLfloat*);
void (*glRasterPos4iv)(GLint*);
void (*glRasterPos4sv)(GLshort*);
void (*glRectd)(GLdouble,GLdouble,GLdouble,GLdouble);
void (*glRectf)(GLfloat,GLfloat,GLfloat,GLfloat);
void (*glRecti)(GLint,GLint,GLint,GLint);
void (*glRects)(GLshort,GLshort,GLshort,GLshort);
void (*glRectdv)(GLdouble*);
void (*glRectfv)(GLfloat*);
void (*glRectiv)(GLint*);
void (*glRectsv)(GLshort*);
void (*glShadeModel)(GLenum);
void (*glLightf)(GLenum,GLenum,GLfloat);
void (*glLighti)(GLenum,GLenum,GLint);
void (*glLightfv)(GLenum,GLenum,GLfloat*);
void (*glLightiv)(GLenum,GLenum,GLint*);
void (*glGetLightfv)(GLenum,GLenum,GLfloat*);
void (*glGetLightiv)(GLenum,GLenum,GLint*);
void (*glLightModelf)(GLenum,GLfloat);
void (*glLightModeli)(GLenum,GLint);
void (*glLightModelfv)(GLenum,GLfloat*);
void (*glLightModeliv)(GLenum,GLint*);
void (*glMaterialf)(GLenum,GLenum,GLfloat);
void (*glMateriali)(GLenum,GLenum,GLint);
void (*glMaterialfv)(GLenum,GLenum,GLfloat*);
void (*glMaterialiv)(GLenum,GLenum,GLint*);
void (*glGetMaterialfv)(GLenum,GLenum,GLfloat*);
void (*glGetMaterialiv)(GLenum,GLenum,GLint*);
void (*glColorMaterial)(GLenum,GLenum);
void (*glPixelZoom)(GLfloat,GLfloat);
void (*glPixelStoref)(GLenum,GLfloat);
void (*glPixelStorei)(GLenum,GLint);
void (*glPixelTransferf)(GLenum,GLfloat);
void (*glPixelTransferi)(GLenum,GLint);
void (*glPixelMapfv)(GLenum,GLint,GLfloat*);
void (*glPixelMapuiv)(GLenum,GLint,GLuint*);
void (*glPixelMapusv)(GLenum,GLint,GLushort*);
void (*glGetPixelMapfv)(GLenum,GLfloat*);
void (*glGetPixelMapuiv)(GLenum,GLuint*);
void (*glGetPixelMapusv)(GLenum,GLushort*);
void (*glBitmap)(GLsizei,GLsizei,GLfloat,GLfloat,GLfloat,GLfloat,GLubyte*);
void (*glReadPixels)(GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*);
void (*glDrawPixels)(GLsizei,GLsizei,GLenum,GLenum,GLvoid*);
void (*glCopyPixels)(GLint,GLint,GLsizei,GLsizei,GLenum);
void (*glStencilFunc)(GLenum,GLint,GLuint);
void (*glStencilMask)(GLuint);
void (*glStencilOp)(GLenum,GLenum,GLenum);
void (*glClearStencil)(GLint);
void (*glTexGend)(GLenum,GLenum,GLdouble);
void (*glTexGenf)(GLenum,GLenum,GLfloat);
void (*glTexGeni)(GLenum,GLenum,GLint);
void (*glTexGendv)(GLenum,GLenum,GLdouble*);
void (*glTexGenfv)(GLenum,GLenum,GLfloat*);
void (*glTexGeniv)(GLenum,GLenum,GLint*);
void (*glGetTexGendv)(GLenum,GLenum,GLdouble*);
void (*glGetTexGenfv)(GLenum,GLenum,GLfloat*);
void (*glGetTexGeniv)(GLenum,GLenum,GLint*);
void (*glTexEnvf)(GLenum,GLenum,GLfloat);
void (*glTexEnvi)(GLenum,GLenum,GLint);
void (*glTexEnvfv)(GLenum,GLenum,GLfloat*);
void (*glTexEnviv)(GLenum,GLenum,GLint*);
void (*glGetTexEnvfv)(GLenum,GLenum,GLfloat*);
void (*glGetTexEnviv)(GLenum,GLenum,GLint*);
void (*glTexParameterf)(GLenum,GLenum,GLfloat);
void (*glTexParameteri)(GLenum,GLenum,GLint);
void (*glTexParameterfv)(GLenum,GLenum,GLfloat*);
void (*glTexParameteriv)(GLenum,GLenum,GLint*);
void (*glGetTexParameterfv)(GLenum,GLenum,GLfloat*);
void (*glGetTexParameteriv)(GLenum,GLenum,GLint*);
void (*glGetTexLevelParameterfv)(GLenum,GLint,GLenum,GLfloat*);
void (*glGetTexLevelParameteriv)(GLenum,GLint,GLenum,GLint*);
void (*glTexImage1D)(GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,GLvoid*);
void (*glTexImage2D)(GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,GLvoid*);
void (*glGetTexImage)(GLenum,GLint,GLenum,GLenum,GLvoid*);
void (*glMap1d)(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble*);
void (*glMap1f)(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat*);
void (*glMap2d)(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,GLdouble*);
void (*glMap2f)(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,GLfloat*);
void (*glGetMapdv)(GLenum,GLenum,GLdouble*);
void (*glGetMapfv)(GLenum,GLenum,GLfloat*);
void (*glGetMapiv)(GLenum,GLenum,GLint*);
void (*glEvalCoord1d)(GLdouble);
void (*glEvalCoord1f)(GLfloat);
void (*glEvalCoord1dv)(GLdouble*);
void (*glEvalCoord1fv)(GLfloat*);
void (*glEvalCoord2d)(GLdouble,GLdouble);
void (*glEvalCoord2f)(GLfloat,GLfloat);
void (*glEvalCoord2dv)(GLdouble*);
void (*glEvalCoord2fv)(GLfloat*);
void (*glMapGrid1d)(GLint,GLdouble,GLdouble);
void (*glMapGrid1f)(GLint,GLfloat,GLfloat);
void (*glMapGrid2d)(GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble);
void (*glMapGrid2f)(GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat);
void (*glEvalPoint1)(GLint);
void (*glEvalPoint2)(GLint,GLint);
void (*glEvalMesh1)(GLenum,GLint,GLint);
void (*glEvalMesh2)(GLenum,GLint,GLint,GLint,GLint);
void (*glFogf)(GLenum,GLfloat);
void (*glFogi)(GLenum,GLint);
void (*glFogfv)(GLenum,GLfloat*);
void (*glFogiv)(GLenum,GLint*);
void (*glFeedbackBuffer)(GLsizei,GLenum,GLfloat*);
void (*glPassThrough)(GLfloat);
void (*glSelectBuffer)(GLsizei,GLuint*);
void (*glInitNames)();
void (*glLoadName)(GLuint);
void (*glPushName)(GLuint);
void (*glPopName)();
